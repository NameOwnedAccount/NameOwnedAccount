{
  "address": "0xc78eE50401793f0a6e8b260C8EF1A693B208Fc65",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "Register",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "SetOwner",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authenticate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xaa0d5c49a80460739c302bfa4cf1dd7375f4a29f0846a81f972f33741fc95531",
  "receipt": {
    "to": null,
    "from": "0xa4b368e3a9D49Ff15b58f70Fb976724A98B6D149",
    "contractAddress": "0xc78eE50401793f0a6e8b260C8EF1A693B208Fc65",
    "transactionIndex": 11,
    "gasUsed": "428994",
    "logsBloom": "0x
    "blockHash": "0xa985f9545f0acff639d5b92af9eb8a371e0cdfece343ccdbeee896e62c03e728",
    "transactionHash": "0xaa0d5c49a80460739c302bfa4cf1dd7375f4a29f0846a81f972f33741fc95531",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 25637627,
        "transactionHash": "0xaa0d5c49a80460739c302bfa4cf1dd7375f4a29f0846a81f972f33741fc95531",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a4b368e3a9d49ff15b58f70fb976724a98b6d149",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000cf4700fcc626e0000000000000000000000000000000000000000000000000b63fa7ad579e1b3000000000000000000000000000000000000000000000c16554a17b1bd0b8f2b0000000000000000000000000000000000000000000000000b57060ac5ad7f45000000000000000000000000000000000000000000000c1655570c21ccd7f199",
        "logIndex": 183,
        "blockHash": "0xa985f9545f0acff639d5b92af9eb8a371e0cdfece343ccdbeee896e62c03e728"
      }
    ],
    "blockNumber": 25637627,
    "cumulativeGasUsed": "6258447",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d6a17c34c3ab74eb4680197c68a50aaf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authenticate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/identity/UniversalNameService.sol\":\"UniversalNameService\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/identity/IUniversalNameService.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\npragma experimental ABIEncoderV2;\\n\\ninterface IUniversalNameService {\\n    struct Identity {\\n        string name;\\n        address owner;\\n    }\\n\\n    event Register(\\n        bytes32 indexed id,\\n        address indexed owner,\\n        string name\\n    );\\n\\n    event SetOwner(\\n        bytes32 indexed id,\\n        address indexed oldOwner,\\n        address indexed newOwner\\n    );\\n\\n    function authenticate(\\n        bytes32 id,\\n        address operator\\n    ) external view returns(bool);\\n\\n    function name(bytes32 id) external view returns(string memory);\\n\\n    function owner(bytes32 id) external view returns(address);\\n}\\n\",\"keccak256\":\"0x3ee7f046cd9f8f3d84bf8fa3a621517ceb70b706d4931410eb8776dae6a9dfc1\",\"license\":\"MIT\"},\"contracts/identity/LibIdentity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LibIdentity {\\n    function encode(address account) internal pure returns(bytes32) {\\n        return keccak256(abi.encode(account));\\n    }\\n}\\n\",\"keccak256\":\"0x29c89df2a7e63f4e840760bfe4c2ee39d27eda5199c7de5343495f64123d83bc\",\"license\":\"MIT\"},\"contracts/identity/UniversalNameService.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport './LibIdentity.sol';\\nimport './IUniversalNameService.sol';\\n\\ncontract UniversalNameService is Context, IUniversalNameService {\\n    using LibIdentity for address;\\n\\n    mapping(bytes32 => Identity) private _identities;\\n\\n    function register(string memory name_, address owner_) external {\\n        bytes32 id = keccak256(abi.encode(name_));\\n        require(\\n            owner(id) == address(0),\\n            'IdentityService: already registered'\\n        );\\n        _identities[id] = Identity(name_, owner_);\\n        emit Register(id, owner_, name_);\\n    }\\n\\n    function setOwner(\\n        bytes32 id,\\n        address newOwner\\n    ) external {\\n        address operator = _msgSender();\\n        require(\\n            owner(id) == operator,\\n            'IdentityService: not authorized'\\n        );\\n        _identities[id].owner = newOwner;\\n        emit SetOwner(id, operator, newOwner);\\n    }\\n\\n    function authenticate(\\n        bytes32 id,\\n        address operator\\n    ) external override view returns(bool) {\\n        return operator.encode() == id || owner(id) == operator;\\n    }\\n\\n    function name(bytes32 id) public override view returns(string memory) {\\n        return _identities[id].name;\\n    }\\n\\n    function owner(bytes32 id) public override view returns(address) {\\n        return _identities[id].owner;\\n    }\\n}\\n\",\"keccak256\":\"0x8694b778b0ab400c0558e5d926771c652b5450121f576217ef54196f91d110d6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806302571be31461005c5780631e59c529146100855780635b0fc9c31461009a578063691f3431146100ad578063be98d55a146100cd575b600080fd5b61006f61006a3660046104e8565b6100f0565b60405161007c91906105de565b60405180910390f35b61009861009336600461052b565b61010e565b005b6100986100a8366004610500565b61025e565b6100c06100bb3660046104e8565b610320565b60405161007c91906105f2565b6100e06100db366004610500565b6103c2565b604051901515815260200161007c565b6000908152602081905260409020600101546001600160a01b031690565b60008260405160200161012191906105f2565b60405160208183030381529060405280519060200120905060006001600160a01b031661014d826100f0565b6001600160a01b0316146101b45760405162461bcd60e51b815260206004820152602360248201527f4964656e74697479536572766963653a20616c726561647920726567697374656044820152621c995960ea1b60648201526084015b60405180910390fd5b6040805180820182528481526001600160a01b03841660208083019190915260008481528082529290922081518051929391926101f49284920190610433565b5060209190910151600190910180546001600160a01b0319166001600160a01b039283161790556040519083169082907fa3f8ab5a398eae5d4e5b92373d1de9ebce1cb9fe46ac1d136dac922d456dff74906102519087906105f2565b60405180910390a3505050565b3380610269846100f0565b6001600160a01b0316146102bf5760405162461bcd60e51b815260206004820152601f60248201527f4964656e74697479536572766963653a206e6f7420617574686f72697a65640060448201526064016101ab565b60008381526020819052604080822060010180546001600160a01b0319166001600160a01b03868116918217909255915191929084169186917f8d75bf57b855566b2b2b71ec70276575bc8b4dc6d050ed2a5884ce3a32114fe091a4505050565b600081815260208190526040902080546060919061033d90610645565b80601f016020809104026020016040519081016040528092919081815260200182805461036990610645565b80156103b65780601f1061038b576101008083540402835291602001916103b6565b820191906000526020600020905b81548152906001019060200180831161039957829003601f168201915b50505050509050919050565b6000826103d7836001600160a01b0316610403565b14806103fc5750816001600160a01b03166103f1846100f0565b6001600160a01b0316145b9392505050565b60008160405160200161041691906105de565b604051602081830303815290604052805190602001209050919050565b82805461043f90610645565b90600052602060002090601f01602090048101928261046157600085556104a7565b82601f1061047a57805160ff19168380011785556104a7565b828001600101855582156104a7579182015b828111156104a757825182559160200191906001019061048c565b506104b39291506104b7565b5090565b5b808211156104b357600081556001016104b8565b80356001600160a01b03811681146104e357600080fd5b919050565b6000602082840312156104f9578081fd5b5035919050565b60008060408385031215610512578081fd5b82359150610522602084016104cc565b90509250929050565b6000806040838503121561053d578182fd5b82356001600160401b0380821115610553578384fd5b818501915085601f830112610566578384fd5b81358181111561057857610578610680565b604051601f8201601f19908116603f011681019083821181831017156105a0576105a0610680565b816040528281528860208487010111156105b8578687fd5b8260208601602083013786602084830101528096505050505050610522602084016104cc565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b8181101561061e57858101830151858201604001528201610602565b8181111561062f5783604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061065957607f821691505b6020821081141561067a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220be5dc4ab8e585645031dbd4eec08a38d35642751e8a574521a3f8140380ea84e64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806302571be31461005c5780631e59c529146100855780635b0fc9c31461009a578063691f3431146100ad578063be98d55a146100cd575b600080fd5b61006f61006a3660046104e8565b6100f0565b60405161007c91906105de565b60405180910390f35b61009861009336600461052b565b61010e565b005b6100986100a8366004610500565b61025e565b6100c06100bb3660046104e8565b610320565b60405161007c91906105f2565b6100e06100db366004610500565b6103c2565b604051901515815260200161007c565b6000908152602081905260409020600101546001600160a01b031690565b60008260405160200161012191906105f2565b60405160208183030381529060405280519060200120905060006001600160a01b031661014d826100f0565b6001600160a01b0316146101b45760405162461bcd60e51b815260206004820152602360248201527f4964656e74697479536572766963653a20616c726561647920726567697374656044820152621c995960ea1b60648201526084015b60405180910390fd5b6040805180820182528481526001600160a01b03841660208083019190915260008481528082529290922081518051929391926101f49284920190610433565b5060209190910151600190910180546001600160a01b0319166001600160a01b039283161790556040519083169082907fa3f8ab5a398eae5d4e5b92373d1de9ebce1cb9fe46ac1d136dac922d456dff74906102519087906105f2565b60405180910390a3505050565b3380610269846100f0565b6001600160a01b0316146102bf5760405162461bcd60e51b815260206004820152601f60248201527f4964656e74697479536572766963653a206e6f7420617574686f72697a65640060448201526064016101ab565b60008381526020819052604080822060010180546001600160a01b0319166001600160a01b03868116918217909255915191929084169186917f8d75bf57b855566b2b2b71ec70276575bc8b4dc6d050ed2a5884ce3a32114fe091a4505050565b600081815260208190526040902080546060919061033d90610645565b80601f016020809104026020016040519081016040528092919081815260200182805461036990610645565b80156103b65780601f1061038b576101008083540402835291602001916103b6565b820191906000526020600020905b81548152906001019060200180831161039957829003601f168201915b50505050509050919050565b6000826103d7836001600160a01b0316610403565b14806103fc5750816001600160a01b03166103f1846100f0565b6001600160a01b0316145b9392505050565b60008160405160200161041691906105de565b604051602081830303815290604052805190602001209050919050565b82805461043f90610645565b90600052602060002090601f01602090048101928261046157600085556104a7565b82601f1061047a57805160ff19168380011785556104a7565b828001600101855582156104a7579182015b828111156104a757825182559160200191906001019061048c565b506104b39291506104b7565b5090565b5b808211156104b357600081556001016104b8565b80356001600160a01b03811681146104e357600080fd5b919050565b6000602082840312156104f9578081fd5b5035919050565b60008060408385031215610512578081fd5b82359150610522602084016104cc565b90509250929050565b6000806040838503121561053d578182fd5b82356001600160401b0380821115610553578384fd5b818501915085601f830112610566578384fd5b81358181111561057857610578610680565b604051601f8201601f19908116603f011681019083821181831017156105a0576105a0610680565b816040528281528860208487010111156105b8578687fd5b8260208601602083013786602084830101528096505050505050610522602084016104cc565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b8181101561061e57858101830151858201604001528201610602565b8181111561062f5783604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061065957607f821691505b6020821081141561067a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220be5dc4ab8e585645031dbd4eec08a38d35642751e8a574521a3f8140380ea84e64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2314,
        "contract": "contracts/identity/UniversalNameService.sol:UniversalNameService",
        "label": "_identities",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(Identity)2237_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_struct(Identity)2237_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct IUniversalNameService.Identity)",
        "numberOfBytes": "32",
        "value": "t_struct(Identity)2237_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Identity)2237_storage": {
        "encoding": "inplace",
        "label": "struct IUniversalNameService.Identity",
        "members": [
          {
            "astId": 2234,
            "contract": "contracts/identity/UniversalNameService.sol:UniversalNameService",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2236,
            "contract": "contracts/identity/UniversalNameService.sol:UniversalNameService",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}