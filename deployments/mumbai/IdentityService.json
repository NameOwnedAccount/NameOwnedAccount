{
  "address": "0x1f95EbA61d950C5E67442839212dE00a23896c0a",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "authenticator",
          "type": "address"
        }
      ],
      "name": "AuthKeyUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "authKey",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "username",
          "type": "string"
        }
      ],
      "name": "Register",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "authKey",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authenticate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "username_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "authKey_",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "newAuthKey",
          "type": "address"
        }
      ],
      "name": "updateAuthKey",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "username",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8c2e742edcf31ccd4a634f4ed9adf1485df5b5a9b6cddee8a4b5780b81d3251d",
  "receipt": {
    "to": null,
    "from": "0xa4b368e3a9D49Ff15b58f70Fb976724A98B6D149",
    "contractAddress": "0x1f95EbA61d950C5E67442839212dE00a23896c0a",
    "transactionIndex": 4,
    "gasUsed": "427758",
    "logsBloom": "0x
    "blockHash": "0xf218819a6d99b59b1099de4021329b99d7978eead1f35718bc84ec572783dae3",
    "transactionHash": "0x8c2e742edcf31ccd4a634f4ed9adf1485df5b5a9b6cddee8a4b5780b81d3251d",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 25628910,
        "transactionHash": "0x8c2e742edcf31ccd4a634f4ed9adf1485df5b5a9b6cddee8a4b5780b81d3251d",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a4b368e3a9d49ff15b58f70fb976724a98b6d149",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000001e64df688aaab40000000000000000000000000000000000000000000000000c2eea665320d9b30000000000000000000000000000000000000000000008b7b325a2f8dcc68c7d0000000000000000000000000000000000000000000000000c108586ea962eff0000000000000000000000000000000000000000000008b7b34407d845513731",
        "logIndex": 11,
        "blockHash": "0xf218819a6d99b59b1099de4021329b99d7978eead1f35718bc84ec572783dae3"
      }
    ],
    "blockNumber": 25628910,
    "cumulativeGasUsed": "1423313",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "5f18aae42edb57ee56ee031963f10f72",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authenticator\",\"type\":\"address\"}],\"name\":\"AuthKeyUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authKey\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"Register\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"authKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authenticate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"authKey_\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAuthKey\",\"type\":\"address\"}],\"name\":\"updateAuthKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"username\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/identity/IdentityService.sol\":\"IdentityService\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/identity/IIdentityService.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\npragma experimental ABIEncoderV2;\\n\\nimport './LibIdentity.sol';\\n\\ninterface IIdentityService {\\n    event Register(\\n        bytes32 indexed id,\\n        address indexed authKey,\\n        string username\\n    );\\n\\n    event AuthKeyUpdate(\\n        bytes32 indexed id,\\n        address indexed authenticator\\n    );\\n\\n    function authenticate(\\n        bytes32 id,\\n        address operator\\n    ) external view returns(bool);\\n\\n    function username(bytes32 id) external view returns(string memory);\\n\\n    function authKey(bytes32 id) external view returns(address);\\n}\\n\",\"keccak256\":\"0xe9c9450422516b6d6daa2f575a8d07b9ef6359a7eeb039b68fc3228dac9c0b13\",\"license\":\"MIT\"},\"contracts/identity/IdentityService.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport './IIdentityService.sol';\\n\\ncontract IdentityService is Context, IIdentityService {\\n    using LibIdentity for address;\\n\\n    struct Identity {\\n        string username;\\n        address authKey;\\n    }\\n\\n    mapping(bytes32 => Identity) private _identities;\\n\\n    function register(\\n        string memory username_,\\n        address authKey_\\n    ) external {\\n        bytes32 id = keccak256(abi.encode(username_));\\n        require(\\n            authKey(id) == address(0),\\n            'IdentityService: already registered'\\n        );\\n        _identities[id] = Identity(username_, authKey_);\\n        emit Register(id, authKey_, username_);\\n    }\\n\\n    function updateAuthKey(bytes32 id, address newAuthKey) external {\\n        require(\\n            authKey(id) == _msgSender(),\\n            'IdentityService: not authorized'\\n        );\\n        _identities[id].authKey = newAuthKey;\\n        emit AuthKeyUpdate(id, newAuthKey);\\n    }\\n\\n    function authenticate(\\n        bytes32 id,\\n        address operator\\n    ) external override view returns(bool) {\\n        return operator.encode() == id || authKey(id) == operator;\\n    }\\n\\n    function username(bytes32 id) public override view returns(string memory) {\\n        return _identities[id].username;\\n    }\\n\\n    function authKey(bytes32 id) public override view returns(address) {\\n        return _identities[id].authKey;\\n    }\\n}\\n\",\"keccak256\":\"0x904ee3f4f834da9cdc2d9cde2cf150c40c332dee926769360d84a471020c4a6c\",\"license\":\"MIT\"},\"contracts/identity/LibIdentity.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LibIdentity {\\n    function encode(address account) internal pure returns(bytes32) {\\n        return keccak256(abi.encode(account));\\n    }\\n}\\n\",\"keccak256\":\"0x29c89df2a7e63f4e840760bfe4c2ee39d27eda5199c7de5343495f64123d83bc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106c6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631e59c5291461005c5780638f37ad29146100715780639485133a1461009a578063ad9a2fc6146100ad578063be98d55a146100cd575b600080fd5b61006f61006a366004610525565b6100f0565b005b61008461007f3660046104e2565b610240565b60405161009191906105ec565b60405180910390f35b61006f6100a83660046104fa565b6102e2565b6100c06100bb3660046104e2565b61039e565b60405161009191906105d8565b6100e06100db3660046104fa565b6103bc565b6040519015158152602001610091565b60008260405160200161010391906105ec565b60405160208183030381529060405280519060200120905060006001600160a01b031661012f8261039e565b6001600160a01b0316146101965760405162461bcd60e51b815260206004820152602360248201527f4964656e74697479536572766963653a20616c726561647920726567697374656044820152621c995960ea1b60648201526084015b60405180910390fd5b6040805180820182528481526001600160a01b03841660208083019190915260008481528082529290922081518051929391926101d6928492019061042d565b5060209190910151600190910180546001600160a01b0319166001600160a01b039283161790556040519083169082907fa3f8ab5a398eae5d4e5b92373d1de9ebce1cb9fe46ac1d136dac922d456dff74906102339087906105ec565b60405180910390a3505050565b600081815260208190526040902080546060919061025d9061063f565b80601f01602080910402602001604051908101604052809291908181526020018280546102899061063f565b80156102d65780601f106102ab576101008083540402835291602001916102d6565b820191906000526020600020905b8154815290600101906020018083116102b957829003601f168201915b50505050509050919050565b336102ec8361039e565b6001600160a01b0316146103425760405162461bcd60e51b815260206004820152601f60248201527f4964656e74697479536572766963653a206e6f7420617574686f72697a656400604482015260640161018d565b60008281526020819052604080822060010180546001600160a01b0319166001600160a01b0385169081179091559051909184917f54f39fc7b0e71d32cb7e22fbf6e7e749bb3c93497a20c7e1f3079699ab5dc2ac9190a35050565b6000908152602081905260409020600101546001600160a01b031690565b6000826103d1836001600160a01b03166103fd565b14806103f65750816001600160a01b03166103eb8461039e565b6001600160a01b0316145b9392505050565b60008160405160200161041091906105d8565b604051602081830303815290604052805190602001209050919050565b8280546104399061063f565b90600052602060002090601f01602090048101928261045b57600085556104a1565b82601f1061047457805160ff19168380011785556104a1565b828001600101855582156104a1579182015b828111156104a1578251825591602001919060010190610486565b506104ad9291506104b1565b5090565b5b808211156104ad57600081556001016104b2565b80356001600160a01b03811681146104dd57600080fd5b919050565b6000602082840312156104f3578081fd5b5035919050565b6000806040838503121561050c578081fd5b8235915061051c602084016104c6565b90509250929050565b60008060408385031215610537578182fd5b82356001600160401b038082111561054d578384fd5b818501915085601f830112610560578384fd5b8135818111156105725761057261067a565b604051601f8201601f19908116603f0116810190838211818310171561059a5761059a61067a565b816040528281528860208487010111156105b2578687fd5b826020860160208301378660208483010152809650505050505061051c602084016104c6565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610618578581018301518582016040015282016105fc565b818111156106295783604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061065357607f821691505b6020821081141561067457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220124e298910bd98586c108354070ac9af9da16d496a0db368288cbdccfdd83d4564736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631e59c5291461005c5780638f37ad29146100715780639485133a1461009a578063ad9a2fc6146100ad578063be98d55a146100cd575b600080fd5b61006f61006a366004610525565b6100f0565b005b61008461007f3660046104e2565b610240565b60405161009191906105ec565b60405180910390f35b61006f6100a83660046104fa565b6102e2565b6100c06100bb3660046104e2565b61039e565b60405161009191906105d8565b6100e06100db3660046104fa565b6103bc565b6040519015158152602001610091565b60008260405160200161010391906105ec565b60405160208183030381529060405280519060200120905060006001600160a01b031661012f8261039e565b6001600160a01b0316146101965760405162461bcd60e51b815260206004820152602360248201527f4964656e74697479536572766963653a20616c726561647920726567697374656044820152621c995960ea1b60648201526084015b60405180910390fd5b6040805180820182528481526001600160a01b03841660208083019190915260008481528082529290922081518051929391926101d6928492019061042d565b5060209190910151600190910180546001600160a01b0319166001600160a01b039283161790556040519083169082907fa3f8ab5a398eae5d4e5b92373d1de9ebce1cb9fe46ac1d136dac922d456dff74906102339087906105ec565b60405180910390a3505050565b600081815260208190526040902080546060919061025d9061063f565b80601f01602080910402602001604051908101604052809291908181526020018280546102899061063f565b80156102d65780601f106102ab576101008083540402835291602001916102d6565b820191906000526020600020905b8154815290600101906020018083116102b957829003601f168201915b50505050509050919050565b336102ec8361039e565b6001600160a01b0316146103425760405162461bcd60e51b815260206004820152601f60248201527f4964656e74697479536572766963653a206e6f7420617574686f72697a656400604482015260640161018d565b60008281526020819052604080822060010180546001600160a01b0319166001600160a01b0385169081179091559051909184917f54f39fc7b0e71d32cb7e22fbf6e7e749bb3c93497a20c7e1f3079699ab5dc2ac9190a35050565b6000908152602081905260409020600101546001600160a01b031690565b6000826103d1836001600160a01b03166103fd565b14806103f65750816001600160a01b03166103eb8461039e565b6001600160a01b0316145b9392505050565b60008160405160200161041091906105d8565b604051602081830303815290604052805190602001209050919050565b8280546104399061063f565b90600052602060002090601f01602090048101928261045b57600085556104a1565b82601f1061047457805160ff19168380011785556104a1565b828001600101855582156104a1579182015b828111156104a1578251825591602001919060010190610486565b506104ad9291506104b1565b5090565b5b808211156104ad57600081556001016104b2565b80356001600160a01b03811681146104dd57600080fd5b919050565b6000602082840312156104f3578081fd5b5035919050565b6000806040838503121561050c578081fd5b8235915061051c602084016104c6565b90509250929050565b60008060408385031215610537578182fd5b82356001600160401b038082111561054d578384fd5b818501915085601f830112610560578384fd5b8135818111156105725761057261067a565b604051601f8201601f19908116603f0116810190838211818310171561059a5761059a61067a565b816040528281528860208487010111156105b2578687fd5b826020860160208301378660208483010152809650505050505061051c602084016104c6565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610618578581018301518582016040015282016105fc565b818111156106295783604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061065357607f821691505b6020821081141561067457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220124e298910bd98586c108354070ac9af9da16d496a0db368288cbdccfdd83d4564736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1904,
        "contract": "contracts/identity/IdentityService.sol:IdentityService",
        "label": "_identities",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(Identity)1899_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_struct(Identity)1899_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct IdentityService.Identity)",
        "numberOfBytes": "32",
        "value": "t_struct(Identity)1899_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Identity)1899_storage": {
        "encoding": "inplace",
        "label": "struct IdentityService.Identity",
        "members": [
          {
            "astId": 1896,
            "contract": "contracts/identity/IdentityService.sol:IdentityService",
            "label": "username",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1898,
            "contract": "contracts/identity/IdentityService.sol:IdentityService",
            "label": "authKey",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      }
    }
  }
}